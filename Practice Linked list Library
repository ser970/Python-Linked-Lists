class node:
    
    def __init__(self,data):
        self.data = data
        self.next = None
        
class linked_list:
    
    def __init__(self):
        self.head = None
        
    def print_list(self):
        temp = self.head
        print(temp.data)
        while(temp.next != None):
            print(temp.next.data)
            temp = temp.next
            
    def push(self,data):
        temp = self.head
        self.head = node(data)
        self.head.next = temp
        
    def find_insert(self,data,snode):
        temp = self.head
        while(temp.data != snode):
            temp = temp.next
        new_node = node(data)
        new_node.next = temp.next
        temp.next = new_node
        
    def insert_after(self,prev_node,new_node):
        if prev_node is None:
            return
        insert_node = node(new_node)
        insert_node.next = prev_node.next
        prev_node.next = insert_node
        
    def append(self,data):
        temp = self.head
        if temp is None:
            self.head = node(data)
            return
        while(temp.next != None):
            temp=temp.next 
        new_node = node(data)
        temp.next = new_node
        
    def len_list(self):
        temp = self.head
        counter =1
        if temp is None:
            return(counter)
        while(temp.next != None):
            temp=temp.next 
            counter +=1
        return counter
    
    def test_loop(self):
        temp = self.head 
        counter = 0
        i = 0
        while(temp.next != None):
            iterator =self.head
            i = 0
            while(i<counter):
                if iterator == temp:
                    print("is loop length {}".format(counter-i))
                    return
                iterator = iterator.next 
                i+=1
            counter+=1
            temp = temp.next
                
